events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 업스트림 서버 정의 (Spring Boot 애플리케이션 인스턴스들)
    upstream backend {
        # 로드 밸런싱 방식: least_conn (최소 연결 수 기준)
        least_conn;
        
        # Spring Boot 애플리케이션 인스턴스들
        server app1:8080 max_fails=3 fail_timeout=30s;
        server app2:8080 max_fails=3 fail_timeout=30s;
        
        # 헬스체크를 위한 설정
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # 기본 위치
        location / {
            proxy_pass http://backend;
            
            # 프록시 헤더 설정
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 타임아웃 설정
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # 연결 유지
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # 헬스체크 엔드포인트
        location /health {
            proxy_pass http://backend/actuator/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Nginx 상태 페이지 (모니터링용)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;  # Docker 네트워크만 허용
            deny all;
        }

        # 에러 페이지
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}